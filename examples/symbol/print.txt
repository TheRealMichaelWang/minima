include "symbol/core.txt"

record eq_leaf {
	proc print {
		extern print(this.obj)
	}
}

record match {
	proc print {
		extern print("match:",this.id)
	}
}

record eq_bin_op {
	proc print_child(child) {
		if extern implements(child, #eq_bin_op) {
			goproc print as child(this.op_prec)
		}
		else {
			goproc print as child
		}
	}

	proc print_left(op_prec) {
		if this.op_prec < op_prec {
			extern print('(')
		}
		goproc print_child as this(this.left)
	}

	proc print_right(op_prec) {
		goproc print_child as this(this.right)
		if this.op_prec < op_prec {
			extern print(')')
		}
	}

	proc print {
		goproc print as this(0)
	}
}

record eq_op_add {
	proc print(op_prec) {
		goproc print_left as this(op_prec)
		extern print(" + ")
		goproc print_right as this(op_prec)
	}
}

record eq_op_subtract {
	proc print(op_prec) {
		goproc print_left as this(op_prec)
		extern print(" - ")
		goproc print_right as this(op_prec)
	}
}

record eq_op_multiply {
	proc print(op_prec) {
		if this.left == -1 {
			extern print('-')
			goproc print as this.right
		}
		elif this.right == -1 {
			extern print('-')
			goproc print as this.left
		}
		else {
			goproc print_left as this(op_prec)
			extern print(" * ")
			goproc print_right as this(op_prec)
		}
	}
}

record eq_op_divide {
	proc print(op_prec) {
		goproc print_left as this(op_prec)
		extern print(" / ")
		goproc print_right as this(op_prec)
	}
}

record eq_op_mod {
	proc print(op_prec) {
		goproc print_left as this(op_prec)
		extern print(" % ")
		goproc print_right as this(op_prec)
	}
}

record eq_op_pow {
	proc print(op_prec) {
		goproc print_left as this(op_prec)
		extern print(" ^ ")
		goproc print_right as this(op_prec)
	}
}

record eq_op_log {
	proc print(op_prec) {
		extern print("log(")
		goproc print as this.left
		extern print(", ")
		goproc print as this.right
		extern print(')')
	}
}

record eq_op_abs {
	proc print {
		extern print("abs(")
		goproc print as this.operand
		extern print(')')
	}
}