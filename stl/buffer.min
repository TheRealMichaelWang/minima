rem Minima, written by Michael Wang 2020-21

rem Purpose:	Implements basic array handling procedures

rem Purpose:	Creates a copied, extended array with references to the original array's items.
rem			Returns a new buffer.
proc realloc(buffer, len) {
	if len < extern len(buffer) {
		return null
	}

	set newbuffer to alloc[len]

	set i to extern len(buffer)
	while dec i {
		set newbuffer[i] to buffer[i]
	}
	return newbuffer
}

rem Purpose: 	Repeatedley sets a value to an array
proc memset(buffer, value) {
	set i to extern len(buffer)
	while dec i {
		set buffer[i] to value
	}
}

rem Purpose:	Copies elements to another collection/array
proc memcpy(dest, src, dest_offset, src_offset, length){
	set i to length
	while dec i {
		set dest[i + dest_offset] to src[i + src_offset]
	}
}

rem Purpose:	Reverses the order of the elements in an array
proc reverse(buffer) {
	set len to extern len(buffer)
	set i to len / 2
	while dec i {
		set temp to ref buffer[i]
		set buffer[i] to ref buffer[len - i - 1]
		set buffer[len - i - 1] to ref temp
	}
}